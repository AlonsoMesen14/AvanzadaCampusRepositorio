// <auto-generated />
using CampussAvanzadaa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CampussAvanzadaa.Migrations
{
    [DbContext(typeof(AvanzadaContext))]
    partial class AvanzadaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CampussAvanzadaa.Model.AsistenciaEstudiantes", b =>
                {
                    b.Property<string>("IndAsistencia")
                        .HasColumnName("ind_asistencia")
                        .HasMaxLength(50);

                    b.Property<string>("Comentarios")
                        .HasColumnName("comentarios")
                        .HasMaxLength(50);

                    b.Property<int>("Estado")
                        .HasColumnName("estado");

                    b.Property<DateTime>("Fechaasistencia")
                        .HasColumnName("fechaasistencia")
                        .HasColumnType("date");

                    b.Property<string>("IdGrupo")
                        .IsRequired()
                        .HasColumnName("id_grupo")
                        .HasMaxLength(50);

                    b.Property<string>("IdPersona")
                        .HasColumnName("id_persona")
                        .HasMaxLength(50);

                    b.HasKey("IndAsistencia");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdPersona");

                    b.ToTable("AsistenciaEstudiantes");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.AsistenciaProfesor", b =>
                {
                    b.Property<string>("IdAsistencia")
                        .HasColumnName("id_Asistencia")
                        .HasMaxLength(50);

                    b.Property<string>("Comentarios")
                        .HasColumnName("comentarios")
                        .HasMaxLength(50);

                    b.Property<int>("Estado")
                        .HasColumnName("estado");

                    b.Property<DateTime>("Horaingreso")
                        .HasColumnName("horaingreso")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Horasalida")
                        .HasColumnName("horasalida")
                        .HasColumnType("datetime");

                    b.Property<string>("IdGrupo")
                        .HasColumnName("id_grupo")
                        .HasMaxLength(50);

                    b.Property<string>("IdPersona")
                        .HasColumnName("id_persona")
                        .HasMaxLength(50);

                    b.HasKey("IdAsistencia");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdPersona");

                    b.ToTable("AsistenciaProfesor");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Carreras", b =>
                {
                    b.Property<string>("IdCarrera")
                        .HasColumnName("id_carrera")
                        .HasMaxLength(50);

                    b.Property<string>("IdPersona")
                        .HasColumnName("id_persona")
                        .HasMaxLength(50);

                    b.Property<string>("NombreCarrera")
                        .HasMaxLength(50);

                    b.HasKey("IdCarrera");

                    b.HasIndex("IdPersona");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Cursos", b =>
                {
                    b.Property<string>("IdCurso")
                        .HasColumnName("Id_Curso")
                        .HasMaxLength(50);

                    b.Property<string>("IdCarrera")
                        .HasColumnName("id_carrera")
                        .HasMaxLength(50);

                    b.Property<int>("Creditos")
                        .HasColumnName("creditos");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<int>("Estado")
                        .HasColumnName("estado");

                    b.Property<string>("IdMateriarequerida")
                        .HasColumnName("id_materiarequerida")
                        .HasMaxLength(50);

                    b.Property<string>("IdPersona")
                        .HasColumnName("id_persona")
                        .HasMaxLength(50);

                    b.Property<int>("Precio")
                        .HasColumnName("precio");

                    b.HasKey("IdCurso", "IdCarrera");

                    b.HasIndex("IdCarrera");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.DetalleMatricula", b =>
                {
                    b.Property<string>("IdDetalleMatricula")
                        .HasColumnName("idDetalleMatricula")
                        .HasMaxLength(50);

                    b.Property<string>("IdCarrera")
                        .HasColumnName("id_carrera")
                        .HasMaxLength(50);

                    b.Property<string>("IdCurso")
                        .HasColumnName("id_Curso")
                        .HasMaxLength(50);

                    b.Property<string>("IdMatricula")
                        .IsRequired()
                        .HasColumnName("id_Matricula")
                        .HasMaxLength(50);

                    b.Property<int>("Nota")
                        .HasColumnName("nota");

                    b.Property<int>("Submonto")
                        .HasColumnName("submonto");

                    b.HasKey("IdDetalleMatricula");

                    b.HasIndex("IdMatricula");

                    b.HasIndex("IdCurso", "IdCarrera");

                    b.ToTable("DetalleMatricula");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.DetalleNotas", b =>
                {
                    b.Property<string>("IdDetalleNota")
                        .HasColumnName("id_DetalleNota")
                        .HasMaxLength(50);

                    b.Property<string>("IdHistorico")
                        .HasColumnName("id_historico")
                        .HasMaxLength(50);

                    b.Property<string>("IdRubro")
                        .HasColumnName("id_Rubro")
                        .HasMaxLength(50);

                    b.Property<int>("Porcentajeganado")
                        .HasColumnName("porcentajeganado");

                    b.HasKey("IdDetalleNota");

                    b.HasIndex("IdHistorico");

                    b.HasIndex("IdRubro");

                    b.ToTable("DetalleNotas");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Grupos", b =>
                {
                    b.Property<string>("IdGrupo")
                        .HasColumnName("Id_Grupo")
                        .HasMaxLength(50);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<string>("IdCarrera")
                        .HasColumnName("id_carrera")
                        .HasMaxLength(50);

                    b.Property<string>("IdCurso")
                        .HasColumnName("id_curso")
                        .HasMaxLength(50);

                    b.Property<string>("IdHorario")
                        .HasColumnName("id_horario")
                        .HasMaxLength(50);

                    b.HasKey("IdGrupo");

                    b.HasIndex("IdCarrera", "IdCurso");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Matricula", b =>
                {
                    b.Property<string>("IdMatricula")
                        .HasColumnName("id_matricula")
                        .HasMaxLength(50);

                    b.Property<string>("Creidtomatriculado")
                        .HasColumnName("creidtomatriculado")
                        .HasColumnType("nchar(10)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnName("fecha")
                        .HasColumnType("date");

                    b.Property<string>("IdEstudiante")
                        .HasColumnName("id_estudiante")
                        .HasMaxLength(50);

                    b.Property<string>("IdMatriculante")
                        .HasColumnName("id_matriculante")
                        .HasMaxLength(50);

                    b.Property<string>("Monto")
                        .HasColumnName("monto")
                        .HasColumnType("nchar(10)");

                    b.Property<int>("Nota")
                        .HasColumnName("nota");

                    b.Property<string>("Periodo")
                        .HasColumnName("periodo")
                        .HasMaxLength(50);

                    b.HasKey("IdMatricula");

                    b.HasIndex("IdEstudiante");

                    b.HasIndex("IdMatriculante");

                    b.ToTable("Matricula");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Notas", b =>
                {
                    b.Property<string>("IdHistorico")
                        .HasColumnName("id_historico")
                        .HasMaxLength(50);

                    b.Property<string>("IdCurso")
                        .HasColumnName("id_curso")
                        .HasMaxLength(50);

                    b.Property<string>("IdPersona")
                        .HasColumnName("id_persona")
                        .HasMaxLength(50);

                    b.Property<string>("IdTipopersona")
                        .HasColumnName("id_tipopersona")
                        .HasMaxLength(50);

                    b.Property<string>("Idcarrera")
                        .HasColumnName("idcarrera")
                        .HasMaxLength(50);

                    b.Property<string>("IndEstado")
                        .HasColumnName("ind_estado")
                        .HasMaxLength(50);

                    b.Property<int>("Nota")
                        .HasColumnName("nota");

                    b.Property<string>("Periodo")
                        .HasColumnName("periodo")
                        .HasMaxLength(50);

                    b.HasKey("IdHistorico");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdCurso", "Idcarrera");

                    b.HasIndex("IdTipopersona", "IdPersona");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Persona", b =>
                {
                    b.Property<string>("IdPersona")
                        .HasColumnName("Id_Persona")
                        .HasMaxLength(50);

                    b.Property<string>("Carnet")
                        .IsRequired()
                        .HasColumnName("carnet")
                        .HasMaxLength(50);

                    b.Property<string>("Ciudad")
                        .HasMaxLength(50);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Genero")
                        .HasColumnName("genero")
                        .HasMaxLength(1);

                    b.Property<string>("IdTipoPersona")
                        .HasColumnName("idTipoPersona")
                        .HasMaxLength(50);

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdPersona");

                    b.HasIndex("IdTipoPersona");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.PersonaXtipo", b =>
                {
                    b.Property<string>("IdPersona")
                        .HasColumnName("Id_Persona")
                        .HasMaxLength(50);

                    b.Property<string>("IdTipoPersona")
                        .HasColumnName("Id_TipoPersona")
                        .HasMaxLength(50);

                    b.HasKey("IdPersona", "IdTipoPersona");

                    b.HasIndex("IdTipoPersona");

                    b.ToTable("PersonaXTipo");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Rubros", b =>
                {
                    b.Property<string>("IdRubro")
                        .HasMaxLength(50);

                    b.Property<string>("IdCarrera")
                        .HasColumnName("id_Carrera")
                        .HasMaxLength(50);

                    b.Property<string>("IdCurso")
                        .HasColumnName("id_Curso")
                        .HasMaxLength(50);

                    b.Property<string>("NombreRubro")
                        .HasColumnType("nchar(10)");

                    b.Property<int>("Porcentaje");

                    b.HasKey("IdRubro");

                    b.HasIndex("IdCurso", "IdCarrera");

                    b.ToTable("Rubros");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.TipoPersona", b =>
                {
                    b.Property<string>("IdTipoPersona")
                        .HasMaxLength(50);

                    b.Property<string>("Descripción")
                        .HasColumnType("nchar(10)");

                    b.HasKey("IdTipoPersona");

                    b.ToTable("TipoPersona");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Ventanas", b =>
                {
                    b.Property<string>("IdVentana")
                        .HasColumnName("Id_Ventana")
                        .HasMaxLength(50);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.HasKey("IdVentana");

                    b.ToTable("Ventanas");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.VentanasXperfil", b =>
                {
                    b.Property<string>("TipoPersona")
                        .HasMaxLength(50);

                    b.Property<string>("IdVentana")
                        .IsRequired()
                        .HasColumnName("Id_Ventana")
                        .HasMaxLength(50);

                    b.HasKey("TipoPersona");

                    b.HasIndex("IdVentana");

                    b.ToTable("VentanasXPerfil");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.AsistenciaEstudiantes", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Grupos", "IdGrupoNavigation")
                        .WithMany("AsistenciaEstudiantes")
                        .HasForeignKey("IdGrupo")
                        .HasConstraintName("FK_DetalleGrupo_Grupos");

                    b.HasOne("CampussAvanzadaa.Model.Persona", "IdPersonaNavigation")
                        .WithMany("AsistenciaEstudiantes")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_DetalleGrupo_Persona");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.AsistenciaProfesor", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Grupos", "IdGrupoNavigation")
                        .WithMany("AsistenciaProfesor")
                        .HasForeignKey("IdGrupo")
                        .HasConstraintName("FK_AsistenciaProfesor_Grupos");

                    b.HasOne("CampussAvanzadaa.Model.Persona", "IdPersonaNavigation")
                        .WithMany("AsistenciaProfesor")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_AsistenciaProfesor_Persona");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Carreras", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Persona", "IdPersonaNavigation")
                        .WithMany("Carreras")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_Carreras_Persona");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Cursos", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Carreras", "IdCarreraNavigation")
                        .WithMany("Cursos")
                        .HasForeignKey("IdCarrera")
                        .HasConstraintName("FK_Cursos_Carreras");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.DetalleMatricula", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Matricula", "IdMatriculaNavigation")
                        .WithMany("DetalleMatricula")
                        .HasForeignKey("IdMatricula")
                        .HasConstraintName("FK_DetalleMatricula_Matricula");

                    b.HasOne("CampussAvanzadaa.Model.Cursos", "IdC")
                        .WithMany("DetalleMatricula")
                        .HasForeignKey("IdCurso", "IdCarrera")
                        .HasConstraintName("FK_DetalleMatricula_Cursos");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.DetalleNotas", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Notas", "IdHistoricoNavigation")
                        .WithMany("DetalleNotas")
                        .HasForeignKey("IdHistorico")
                        .HasConstraintName("FK_DetalleNotas_Notas");

                    b.HasOne("CampussAvanzadaa.Model.Rubros", "IdRubroNavigation")
                        .WithMany("DetalleNotas")
                        .HasForeignKey("IdRubro")
                        .HasConstraintName("FK_DetalleNotas_Rubros");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Grupos", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Cursos", "IdC")
                        .WithMany("Grupos")
                        .HasForeignKey("IdCarrera", "IdCurso")
                        .HasConstraintName("FK_Grupos_Cursos");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Matricula", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Persona", "IdEstudianteNavigation")
                        .WithMany("MatriculaIdEstudianteNavigation")
                        .HasForeignKey("IdEstudiante")
                        .HasConstraintName("FK_Matricula_Persona2");

                    b.HasOne("CampussAvanzadaa.Model.Persona", "IdMatriculanteNavigation")
                        .WithMany("MatriculaIdMatriculanteNavigation")
                        .HasForeignKey("IdMatriculante")
                        .HasConstraintName("FK_Matricula_Persona3");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Notas", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Persona", "IdPersonaNavigation")
                        .WithMany("Notas")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_Notas_Persona");

                    b.HasOne("CampussAvanzadaa.Model.Cursos", "Id")
                        .WithMany("Notas")
                        .HasForeignKey("IdCurso", "Idcarrera")
                        .HasConstraintName("FK_Notas_Cursos");

                    b.HasOne("CampussAvanzadaa.Model.PersonaXtipo", "IdNavigation")
                        .WithMany("Notas")
                        .HasForeignKey("IdTipopersona", "IdPersona")
                        .HasConstraintName("FK_Historico_PersonaXTipo");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Persona", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.TipoPersona", "IdTipoPersonaNavigation")
                        .WithMany("Persona")
                        .HasForeignKey("IdTipoPersona")
                        .HasConstraintName("FK_Persona_TipoPersona");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.PersonaXtipo", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Persona", "IdPersonaNavigation")
                        .WithMany("PersonaXtipo")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_PersonaXTipo_Persona");

                    b.HasOne("CampussAvanzadaa.Model.TipoPersona", "IdTipoPersonaNavigation")
                        .WithMany("PersonaXtipo")
                        .HasForeignKey("IdTipoPersona")
                        .HasConstraintName("FK_PersonaXTipo_TipoPersona");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.Rubros", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Cursos", "IdC")
                        .WithMany("Rubros")
                        .HasForeignKey("IdCurso", "IdCarrera")
                        .HasConstraintName("FK_Rubros_Cursos");
                });

            modelBuilder.Entity("CampussAvanzadaa.Model.VentanasXperfil", b =>
                {
                    b.HasOne("CampussAvanzadaa.Model.Ventanas", "IdVentanaNavigation")
                        .WithMany("VentanasXperfil")
                        .HasForeignKey("IdVentana")
                        .HasConstraintName("FK_VentanasXPerfil_Ventanas");
                });
#pragma warning restore 612, 618
        }
    }
}
